安装完成
 $ git config --global user.name "YourName"
 $ git config --global email.name "email@example.com"

 --global 表示这台机器的所有git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户面和email

——————————-———————————————————————————————————————————————————————————————————————————————————————————————————

创建版本库

 第一步： 创建一个空目录作为仓库
  example：
  $ mkdir learngit
  $ cd learngit
  $ pwd
  /Users/michael/learngit

 第二步：把上面的目录变成git可以管理的目录
  $ git init
  Initialized empty Git repository in /Users/michael/learngit/.git
  当前目录下回多出一个.git的目录

——————————————————————————————————————————————————————————————————————————————————————————————————————————————

把文件放到版本库中

 将文件放到如上面的learngit目录下（子目录也可以）

 第一步：将文件添加到仓库
  $ git add 文件名

 第二步：将文件提交到仓库
  $ git commit -m "wrote a readme file"
  [master (root-commit) cb926e7] wrote a readme file
  1 file changed, 2 insertions(+)
  create mode 100644 readme.txt

  -m 后面添加的是对这次提交文件的说明，方便以后查看方便

 注意：
  commit可以一次提交很多文件，所以你可以多次add不同的文件
  $ git add file1.txt
  $ git add file2.txt file3.txt
  $ git commit -m "add 3 files."
——————————————————————————————————————————————————————————————————————————————————————————————————————————————

版本回退

 通过gitlog查看历史记录
  $ git log
  commit 3628164fb26d48395383f8f31179f24e0882e1e0
  Author: Michael Liao <askxuefeng@gmail.com>
  Date:   Tue Aug 20 15:11:49 2013 +0800

  append GPL

  commit ea34578d5496d7dd233c827ed32a8cd576c5ee85
  Author: Michael Liao <askxuefeng@gmail.com>
  Date:   Tue Aug 20 14:53:12 2013 +0800

  add distributed

  commit cb926e7ea50ad11b8f9e909c05226233bf755030
  Author: Michael Liao <askxuefeng@gmail.com>
  Date:   Mon Aug 19 17:51:55 2013 +0800

  wrote a readme file

  git log命令显示从最近到最远的提交日志，我们可以看到3次提交，最近的一次是append GPL，上一次是add distributed，
  最早的一次是wrote a readme file。 如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：

  $ git log --pretty=oneline
  3628164fb26d48395383f8f31179f24e0882e1e0 append GPL
  ea34578d5496d7dd233c827ed32a8cd576c5ee85 add distributed
  cb926e7ea50ad11b8f9e909c05226233bf755030 wrote a readme file

 通过git reset回退版本
  HEAD表示当前版本，上个版本是HEAD^,上上个版本是HEAD^^,往上100个版本是HEAD~100,也可以使用上面记录的commit id
  
  $ git reset --hard HEAD^
  HEAD is now at ea34578 add distributed 

  $ git reset --hard 3628164
  HEAD is now at 3628164 append GPL
  版本号没必要写全，能证明唯一就行

 注意：回退后第二天后悔了，但是原来的版本看不见了怎么办
  git reflog可以记录每一次命令，可以查找昨晚回退的原版本的版本号

  $ git reflog
  ea34578 HEAD@{0}: reset: moving to HEAD^
  3628164 HEAD@{1}: commit: append GPL
  ea34578 HEAD@{2}: commit: add distributed
  cb926e7 HEAD@{3}: commit (initial): wrote a readme file

———————————————————————————————————————————————————————————————————————————————————————————————————————————————
 
工作区和暂存区

 工作区就是电脑里的目录，比如learngit

 版本库

  工作区里有一个.git的文件，这个不是工作区，是git的版本库，版本库最重要的就是stage（index）暂存区和自动创建的第一个分支master
  master由指针HEAD指向

  git add 就是把工作区的文件修改增加到暂存区
  git commit 就是把暂存区的所有内容添加到当前分支

  通过git status 可以产看当前工作区文件的修改提交情况

  每次修改，如果不add到暂存区，那就不会加入到commit中

  用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别

————————————————————————————————————————————————————————————————————————————————————————————————————————————————

撤销修改

 当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
 --一定要有 没有的话这个命令就是切换分支了

 当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，
 就回到了场景1，第二步按场景1操作

 已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库

—————————————————————————————————————————————————————————————————————————————————————————————————————————————————

删除文件

 工作区下，直接在文件管理器中把没用的文件删了，或者用rm命令删了（工作区和版本库不一致了）

 此时，两种情况处理版本库

 如果确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit

 如果删错了，版本库中文件还在，可以用撤销修改命令撤销删除，$ git checkout -- test.txt
 只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容

——————————————————————————————————————————————————————————————————————————————————————————————————————————————

添加远程库
